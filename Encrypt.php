<?php
// Для начала я решил повторить в силу своих знаний алгоритм, который использовался для шифрования с помощью ключевого
// слова, а после -- перейти к основному заданию.

// План довольно простой, я распишу его здесь по пунктам.
// 1. Ключевое слово и слово для шифрования могут быть разной длины. Нам нужен универсальный алгоритм, который будет
// формировать ключ длины, равной длине слово для шифрования.
// 2. Далее нам нужно перевести "буквы в цифры" в двух словах.
// 3. Складываем по модулю два цифры двух слов.
// 4. Переводим получившиеся цифры в буквы и выводим на экран. Поехали!

function EncryptTheWord(string $wordToEncrypt = 'ООО|МИКРОСОФТ|РФ', string $key = 'ПОДРЯДЧИК'): void
{
    //Первое, что мы делаем -- создаем массив из значений нашего "алфавита".
    //Он нам понадобится для поиска цифирных и буквенных значений.
    $alphabet = array('|', 'А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ж', 'З', 'И', 'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т',
        'У', 'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ъ', 'Ы', 'Ь', 'Э', 'Ю', 'Я');

    // Далее нам нужно прописать логику, по которой будет формироваться строка ключа. Нам это нужно, чтобы к моменту
    // сложения по модулю у нас не возникла головная боль с индексами массивов.

    // Возьмем пример из предложенных слов: ООО|МИКРОСОФТ|РФ (16 символов) и ПОДРЯДЧИК (9 символов). Получается,
    // чтобы строчка с ключом сравнялась по количеству символов со строкой слова для шифрования, нам нужно целое слово
    //(9 символов), а также дополнительно еще 7 символов.

    // Так, для того, чтобы определить количество полных вхождений ключа, мы пользуемся делением с ограничением
    // floor(16 / 9), а для количества символов неполного вхождения – целочисленным делением (16 / 9),
    // так как остаток -- это и есть количество символов. Пишем эти простые, но в то же время важные две строчки!


    $repeatFullWord = floor(mb_strlen($wordToEncrypt) / mb_strlen($key));
    $partOfFullWord = mb_strlen($wordToEncrypt) % mb_strlen($key);

    // Далее через цикл и сложение строк формируем нужную нам строку ключа с нужным количеством символов.
    $fullKeyString = '';
    for ($i = 0; $i < $repeatFullWord; $i++) {
        $fullKeyString = "{$fullKeyString}{$key}";
    }
    $remains = mb_substr($key, 0, $partOfFullWord);
    $fullKeyString = "{$fullKeyString}{$remains}";

    //Далее я не хочу работать со строчками -- теперь мы будем работать с массивами. Уже в них будет происходить
    //выборка букв и их перевод в цифры.

    $keyArray = mb_str_split($fullKeyString);
    $resultKeyArray = [];

    //Проходимся по массиву, используя array_search. Она возвращает цифру первого вхождения буквы -- в нашем случае
    //единственного, так как мы работаем с алфавитом, в котором нет повторяющихся символов.
    foreach ($keyArray as $value) {
        $resultKeyArray[] = array_search($value, $alphabet);
    }

    //То же самое делаем и со словом для шифрования.
    $wordArray = mb_str_split($wordToEncrypt);
    $resultWordArray = [];
    foreach ($wordArray as $value) {
        $resultWordArray[] = array_search($value, $alphabet);
    }

    //На данный момент у нас есть два массива. Теперь попарно складываем по модулю каждый из элементов в новый массив.

    $resultSum = [];
    for ($i = 0; $i < count($resultWordArray); $i++) {
        $resultSum[] = $resultWordArray[$i] ^ $resultKeyArray[$i];
    }

    //Теперь значения этого массива переводим в буквы. Эти буквы и будут нашим зашифрованным словом.
    $encryptedWord = [];
    foreach ($resultSum as $value) {
        $encryptedWord[] = $alphabet[$value];
    }

    //Выводим на экран :)
    echo implode('', $encryptedWord);

}

EncryptTheWord(); // А|ЛРУМЭЩГЮ|СБЯХВ

// Отлично! Теперь выполняем основное задание :)
// Мы уже можем воспользоваться наработками из функции выше. Ниже будут идти повторяющиеся куски кода, что противоречит
// правилам хорошего тона. Правильно было бы сделать из каждого повторяющегося кусочка функцию и вызывать ее нужное
// количество раз. Я обязательно учту это в своих следующих работах!

function FindKey(string $wordToEncrypt = 'ООО|СТРОИГАЗМОНТАЖ', string $encryptedWord = 'ЯЗБИФФАСЫННМБДСЯЗН'): void
{
    $alphabet = array('|','А','Б','В','Г','Д','Е','Ж','З','И','К','Л','М','Н','О','П','Р','С','Т',
        'У','Ф','Х','Ц','Ч','Ш','Щ','Ъ','Ы','Ь','Э','Ю','Я');

    // Упаковываем в новый массив буквы, представленные цифрами.
    $encryptedWordArray = [];
    foreach (mb_str_split($encryptedWord) as $value) {
        $encryptedWordArray[] = array_search($value, $alphabet);
    }
    // И ещё раз!
    $wordToEncryptArray = [];
    foreach (mb_str_split($wordToEncrypt) as $value) {
        $wordToEncryptArray[] = array_search($value, $alphabet);
    }

    // Упаковываем в результирующий массив ту же операцию сложения по модулю. В нашем случае она тоже подходит.
    $resultSumKey = [];
    for ($i = 0; $i < count($wordToEncryptArray); $i++) {
        $resultSumKey[] = $encryptedWordArray[$i] ^ $wordToEncryptArray[$i];
    }

    // Переводим буквы в цифры, упаковываем в массив.
    $Key = [];
    foreach ($resultSumKey as $value) {
        $Key[] = $alphabet[$value];
    }

    //Выводим на экран :)
    echo implode('', $Key);

}

FindKey(); // СЕМИДЕСЯТИМГОЛЬНИК

function FindWord(string $encryptedWord = 'РЗМШМГЮПЬДЕКБГЧЛВШ', string $key = 'СЕМИДЕСЯТИМГОЛЬНИК'): void
{
    $alphabet = array('|','А','Б','В','Г','Д','Е','Ж','З','И','К','Л','М','Н','О','П','Р','С','Т',
        'У','Ф','Х','Ц','Ч','Ш','Щ','Ъ','Ы','Ь','Э','Ю','Я');

    // Упаковываем в новый массив буквы, представленные цифрами.
    $encryptedWordArray = [];
    foreach (mb_str_split($encryptedWord) as $value) {
        $encryptedWordArray[] = array_search($value, $alphabet);
    }
    // И ещё раз!
    $keyArray = [];
    foreach (mb_str_split($key) as $value) {
        $keyArray[] = array_search($value, $alphabet);
    }

    // Упаковываем в результирующий массив ту же операцию сложения по модулю. В нашем случае она тоже подходит.
    $resultSumWord = [];
    for ($i = 0; $i < count($encryptedWordArray); $i++) {
        $resultSumWord[] = $encryptedWordArray[$i] ^ $keyArray[$i];
    }

    // Переводим буквы в цифры, упаковываем в массив.
    $wordToEncrypt = [];
    foreach ($resultSumWord as $value) {
        $wordToEncrypt[] = $alphabet[$value];
    }

    //Выводим на экран :)
    echo implode('', $wordToEncrypt);

}

FindWord(); // АО|СИБПРОМКОМПЛЕКТ